{"version":3,"sources":["assets/Logo.jpg","components/Navbar.jsx","components/Footer.jsx","pages/index.js","pages/About.js","pages/Forum.js","pages/Contact.js","pages/Members.js","pages/Blog/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","withRouter","class","href","src","Logo","alt","role","onClick","e","preventDefault","node","ReactDOM","findDOMNode","HTMLElement","burger","querySelector","menu","document","dataset","target","classList","toggle","className","aria-label","aria-expanded","data-target","aria-hidden","id","to","Footer","style","diplay","flexDirenction","index","About","Forum","Contact","Members","Grid","container","spacing","padding","item","xs","borderColor","borderRadius","App","basename","exact","path","component","Landing","Blog","Boolean","window","location","hostname","match","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.fde3e2c7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Logo.29bb2010.jpg\";","import React from \"react\";\nimport Logo from \"../assets/Logo.jpg\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\n\nconst Navbar = () => {\n  const logOut = (e) => {\n    e.preventDefault();\n    localStorage.removeItem(\"usertoken\");\n    this.props.history.push(`/`);\n  };\n  const toggleNav = (e) => {\n    e.preventDefault();\n    const node = ReactDOM.findDOMNode(this);\n    if (node instanceof HTMLElement) {\n      const burger = node.querySelector(\".burger\");\n      const menu = document.querySelector(\"#\" + burger.dataset.target);\n      burger.classList.toggle(\"is-active\");\n      menu.classList.toggle(\"is-active\");\n    }\n  };\n  return (\n    <nav class=\"navbar\">\n      <div class=\"container\">\n        <div class=\"navbar-brand\">\n          <Link class=\"navbar-item\" href=\"/\">\n            <img src={Logo} alt=\"Logo\" />\n          </Link>\n          <a\n            role=\"button\"\n            onClick={toggleNav}\n            href=\"\"\n            className=\"navbar-burger burger\"\n            aria-label=\"menu\"\n            aria-expanded=\"false\"\n            data-target=\"navbarBasicExample\"\n          >\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n            <span aria-hidden=\"true\"></span>\n          </a>\n        </div>\n        <div id=\"navbarMenu\" class=\"navbar-menu\">\n          <div class=\"navbar-end\">\n            <div class=\"tabs is-right\">\n              <ul>\n                <Link to=\"/\" className=\"is-active\">\n                  <span>Home</span>\n                </Link>\n                <Link to=\"/forum\">\n                  <span>Forum</span>\n                </Link>\n                <Link to=\"/contact\">\n                  <span>Contact</span>\n                </Link>\n                <Link to=\"/members\">\n                  <span>Members</span>\n                </Link>\n                <Link to=\"/sponsors\">\n                  <span>Sponsors</span>\n                </Link>\n                <Link to=\"/blog\">\n                  <span>Blog</span>\n                </Link>\n              </ul>\n            </div>\n          </div>\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default withRouter(Navbar);\n","import React from \"react\";\nimport { FaFacebook, FaInstagram, FaTwitter } from \"react-icons/fa\";\n\nconst Footer = () => {\n  return (\n    <div class=\"container columns is-full\">\n      <div\n        class=\"column\"\n        style={{\n          diplay: \"flex\",\n          flexDirenction: \"row\",\n        }}\n      >\n        <a href=\"https://twitter.com\">\n          <FaTwitter />\n        </a>\n        <a href=\"https://instagram.com\">\n          <FaInstagram />\n        </a>\n        <a href=\"https://facebook.com\">\n          <FaFacebook />\n        </a>\n      </div>\n    </div>\n  );\n};\n\nexport default Footer;\n","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Logo from \"../assets/Logo.jpg\";\nimport Footer from \"../components/Footer\";\n\nexport default function index() {\n  return (\n    <section class=\"hero is-fullheight is-default is-bold\">\n      <div class=\"hero-body\">\n        <div class=\"container has-text-centered\">\n          <div class=\"columns is-vcentered\">\n            <div class=\"column is-5\">\n              <figure class=\"image is-4by3\">\n                <img src={Logo} alt=\"Promise Logo\" />\n              </figure>\n            </div>\n            <div class=\"column is-6 is-offset-1\">\n              <h1 class=\"title is-2\">Promise</h1>\n              <h2 class=\"subtitle is-4\">Promise at Wits.</h2>\n              <br />\n              <p class=\"has-text-centered\">\n                <Link to=\"/about\" class=\"button is-medium is-info is-outlined\">\n                  Learn more\n                </Link>\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div class=\"hero-foot\">\n        <Footer />\n      </div>\n    </section>\n  );\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function Forum() {\n  return (\n    <div>\n      <div>\n        <h1>Forum</h1>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\n\nexport default function Contact() {\n  return <div>Contact Page</div>;\n}\n","import React from \"react\";\n\nexport default function Members() {\n  return (\n    <div>\n      <h1>Members</h1>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { FaSearch } from \"react-icons/fa\";\nimport { Box } from \"@material-ui/core\";\nimport { Grid } from \"@material-ui/core\";\nexport default function index() {\n  return (\n    <Grid\n      container\n      spacing={3}\n      style={{\n        padding: 20,\n      }}\n    >\n      <Grid container item xs={12} spacing={2}>\n        <h1>All Post</h1>\n      </Grid>\n      <Grid container item xs={12} spacing={2}>\n        <FaSearch />\n      </Grid>\n      <Grid container item xs={12} spacing={2}>\n        <button\n          className=\"button is-outlined\"\n          style={{\n            borderColor: \"#000\",\n            borderRadius: 0,\n          }}\n        >\n          SignUp/SignIn\n        </button>\n      </Grid>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\n/** Components */\nimport Navbar from \"./components/Navbar\";\n\n/** Pages  */\nimport Landing from \"./pages\";\nimport About from \"./pages/About\";\nimport Forum from \"./pages/Forum\";\nimport Contact from \"./pages/Contact\";\nimport Members from \"./pages/Members\";\n\n/* Blog */\nimport Blog from \"./pages/Blog\";\nfunction App() {\n  return (\n    <Router basename=\"/\">\n      <div>\n        {/* <Navbar /> */}\n        <Route exact path=\"/\" component={Landing} />\n        <div className=\"container\">\n          <Route exact path=\"/forum\" component={Forum} />\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route exact path=\"/members\" component={Members} />\n          <Route exact path=\"/about\" component={About} />\n          <Route exact path=\"/blog\" component={Blog} />\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}