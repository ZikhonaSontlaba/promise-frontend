{"version":3,"sources":["pages/index.js","pages/About.js","App.js","serviceWorker.js","index.js","assets/Logo.jpg"],"names":["index","class","href","src","Logo","alt","data-target","id","About","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"6UAMe,SAASA,IACpB,OACI,6BAASC,MAAM,yCACf,yBAAKA,MAAM,aACP,yBAAKA,MAAM,UACP,yBAAKA,MAAM,aACP,yBAAKA,MAAM,gBACP,uBAAGA,MAAM,cAAcC,KAAK,KACxB,yBAAKC,IAAKC,IAAMC,IAAI,UAExB,0BAAMJ,MAAM,uBAAuBK,cAAY,cAC3C,+BACA,+BACA,iCAGR,yBAAKC,GAAG,aAAaN,MAAM,eACvB,yBAAKA,MAAM,cACP,yBAAKA,MAAM,iBACP,4BACI,wBAAIA,MAAM,aAAY,uBAAGC,KAAK,KAAR,SACtB,4BAAI,uBAAGA,KAAK,UAAR,UACJ,4BAAI,uBAAGA,KAAK,YAAR,YACJ,4BAAI,uBAAGA,KAAK,KAAR,aACJ,4BAAI,uBAAGA,KAAK,KAAR,oBAQhC,yBAAKD,MAAM,aACP,yBAAKA,MAAM,+BACP,yBAAKA,MAAM,wBACP,yBAAKA,MAAM,eACP,4BAAQA,MAAM,iBACV,yBAAKE,IAAKC,IAAMC,IAAI,mBAG5B,yBAAKJ,MAAM,2BACP,wBAAIA,MAAM,cAAV,WAGA,wBAAIA,MAAM,iBAAV,oBAGA,6BACA,uBAAGA,MAAM,qBACL,uBAAGC,KAAK,YAAYD,MAAM,wCAA1B,mBASpB,yBAAKA,MAAM,aACP,yBAAKA,MAAM,aACP,yBAAKA,MAAM,oBACP,uBAAGA,MAAM,qBAAT,yBCjEL,SAASO,IACpB,OACI,8BCyBOC,MAjBf,WACE,OACE,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,UACV,kBAACF,EAAD,OAEF,kBAAC,IAAD,CAAOE,KAAK,KACV,kBAAC,EAAD,WCTQC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SD0HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,kBEzI5BC,EAAOC,QAAU,IAA0B,mC","file":"static/js/main.4c79b115.chunk.js","sourcesContent":["import React from 'react'\nimport Logo from '../assets/Logo.jpg'\nimport '../styles/bulma.css';\nimport '../styles/main.css';\nimport '../styles/admin.css';\n\nexport default function index() {\n    return (\n        <section class=\"hero is-fullheight is-default is-bold\">\n        <div class=\"hero-head\">\n            <nav class=\"navbar\">\n                <div class=\"container\">\n                    <div class=\"navbar-brand\">\n                        <a class=\"navbar-item\" href=\"/\">\n                            <img src={Logo} alt=\"Logo\" />\n                        </a>\n                        <span class=\"navbar-burger burger\" data-target=\"navbarMenu\">\n                            <span></span>\n                            <span></span>\n                            <span></span>\n                        </span>\n                    </div>\n                    <div id=\"navbarMenu\" class=\"navbar-menu\">\n                        <div class=\"navbar-end\">\n                            <div class=\"tabs is-right\">\n                                <ul>\n                                    <li class=\"is-active\"><a href=\"/\">Home</a></li>\n                                    <li><a href=\"/forum\">Forum</a></li>\n                                    <li><a href=\"/contact\">Contact</a></li>\n                                    <li><a href=\"#\">Memebers</a></li>\n                                    <li><a href=\"#\">Sponsors</a></li>\n                                </ul>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </nav>\n        </div>\n        <div class=\"hero-body\">\n            <div class=\"container has-text-centered\">\n                <div class=\"columns is-vcentered\">\n                    <div class=\"column is-5\">\n                        <figure class=\"image is-4by3\">\n                            <img src={Logo} alt=\"Promise Logo\" />\n                        </figure>\n                    </div>\n                    <div class=\"column is-6 is-offset-1\">\n                        <h1 class=\"title is-2\">\n                            Promise\n                        </h1>\n                        <h2 class=\"subtitle is-4\">\n                            Promise at Wits.\n                        </h2>\n                        <br />\n                        <p class=\"has-text-centered\">\n                            <a href=\"/register\" class=\"button is-medium is-info is-outlined\">\n                                Learn more\n                            </a>\n                        </p>\n                    </div>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"hero-foot\">\n            <div class=\"container\">\n                <div class=\"tabs is-centered\">\n                    <p class=\"has-text-centered\">Promise &copy; 2020</p>\n                </div>\n            </div>\n        </div>\n    </section>\n    )\n}\n","import React from 'react'\n\nexport default function About() {\n    return (\n        <div>\n            \n        </div>\n    )\n}\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\n/** Pages  */\nimport Landing from './pages';\nimport About from './pages/About';\n\nfunction App() {\n  return (\n    <Router>\n      <div>\n        <Switch>\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/\">\n            <Landing />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.29bb2010.jpg\";"],"sourceRoot":""}